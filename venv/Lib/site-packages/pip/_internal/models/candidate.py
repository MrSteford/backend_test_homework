from pip._vendor.packaging.version import parse as parse_version

from pip._internal.models.link import Link
from pip._internal.utils.models import KeyBasedCompareMixin


class InstallationCandidate(KeyBasedCompareMixin):
    """Represents a potential "candidate" for installation.
    """

    __slots__ = ["name", "version", "link"]

<<<<<<< HEAD
    def __init__(self, name: str, version: str, link: Link) -> None:
=======
    def __init__(self, name, version, link):
        # type: (str, str, Link) -> None
>>>>>>> c14f9ef1d1b0aaec3809cb7c73e6fd6fc24aba05
        self.name = name
        self.version = parse_version(version)
        self.link = link

        super().__init__(
            key=(self.name, self.version, self.link),
            defining_class=InstallationCandidate
        )

<<<<<<< HEAD
    def __repr__(self) -> str:
=======
    def __repr__(self):
        # type: () -> str
>>>>>>> c14f9ef1d1b0aaec3809cb7c73e6fd6fc24aba05
        return "<InstallationCandidate({!r}, {!r}, {!r})>".format(
            self.name, self.version, self.link,
        )

<<<<<<< HEAD
    def __str__(self) -> str:
=======
    def __str__(self):
        # type: () -> str
>>>>>>> c14f9ef1d1b0aaec3809cb7c73e6fd6fc24aba05
        return '{!r} candidate (version {} at {})'.format(
            self.name, self.version, self.link,
        )
